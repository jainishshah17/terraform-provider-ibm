#cloud-config
write_files:
  - path: /var/opt/jfrog/artifactory/etc/db.properties
    permissions: 0644
    content: |
      type=mysql
      driver=com.mysql.jdbc.Driver
      url=jdbc:mysql://${db_url}/${db_name}?characterEncoding=UTF-8&elideSetAutoCommits=true
      username=${db_user}
      password=${db_password}
  - path: /var/opt/jfrog/artifactory/etc/security/master.key
    permissions: 0644
    content: |
      ${master_key}
  - path: /var/opt/jfrog/artifactory/etc/ha-node.properties
    permissions: 0644
    content: |
      node.id=art1
      artifactory.ha.data.dir=/var/opt/jfrog/artifactory/data
      context.url=http://127.0.0.1:8081/artifactory
      membership.port=10001
      hazelcast.interface=172.25.0.3
      primary=${IS_PRIMARY}
  - path: /var/opt/jfrog/artifactory/etc/binarystore.xml
    permissions: 0644
    content: |
      <config version="2">
          <chain> <!--template="cluster-s3"-->
              <provider id="cache-fs-eventual-s3" type="cache-fs">
                  <provider id="sharding-cluster-eventual-s3" type="sharding-cluster">
                      <sub-provider id="eventual-cluster-s3" type="eventual-cluster">
                          <provider id="retry-s3" type="retry">
                              <provider id="s3" type="s3"/>
                          </provider>
                      </sub-provider>
                      <dynamic-provider id="remote-s3" type="remote"/>
                  </provider>
              </provider>
          </chain>
          <provider id="sharding-cluster-eventual-s3" type="sharding-cluster">
              <readBehavior>crossNetworkStrategy</readBehavior>
              <writeBehavior>crossNetworkStrategy</writeBehavior>
              <redundancy>2</redundancy>
              <property name="zones" value="local,remote"/>
          </provider>
          <provider id="remote-s3" type="remote">
              <zone>remote</zone>
          </provider>
          <provider id="eventual-cluster-s3" type="eventual-cluster">
              <zone>local</zone>
          </provider>
          <provider id="s3" type="s3">
              <identity>${s3_access_key}</identity>
              <credential>${s3_secret_key}</credential>
              <endpoint>${s3_endpoint}</endpoint>
              <bucketName>${s3_bucket_name}</bucketName>
              <property name="s3service.disable-dns-buckets" value="true"></property>
              <property name="xmlparser.sanitize-listings" value="false"/>
              <property name="storage-service.request-signature-version" value="AWS4-HMAC-SHA256"/>
          </provider>
      </config>